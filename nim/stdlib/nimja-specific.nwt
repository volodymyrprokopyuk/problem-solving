{# Specific template is compiled, not the generic template #}

{% extends nimja-generic.nwt %}

{% block header %} {# Define block specific content #}
  <h1>Links</h1>
  {%
  const links = [
    (title: "Google", target: "https://www.google.com"),
    (title: "GitHub", target: "https://www.github.com")
  ]
  %}

  {% var i = 0 %} {# Statement with side effect #}
  {% while i < links.len %}
    <span>{{links[i].title}}</span> {# Expression with value #}
    {% i += 1 %}
  {% endwhile %}

  <ul>
    {% for (i, link) in links.pairs %}
      <li>{{i + 1}}<a href="{{link.target}}">{{link.title}}</a></li>
    {% endfor %}
  </ul>
{% endblock %}

{% block content %}
  <h1>
    {%- if users.len == 0 %} {# Whitespace control #}
      No users
    {% elif users.len == 1 %}
      Single user
    {% else %}
      Users
    {% endif -%}
  </h1>

  <ol>
    {% for user in users %}
      <li>{% importnwt nimja-user.nwt %}</li> {# Import partial template #}
    {% endfor %}
  </ol>

  {% macro renderUser(user: User): string = %} {# Define macro #}
    <div>{{user.name}}</div>
    <div>{{user.id}}</div>
  {% end %}
  {{renderUser(users[0])}} {# Apply macro #}

  {% for (loop, user) in users.loop %} {# Loop iterator #}
    {% if loop.first %} {# first / last #}
      First
    {% elif loop.last %}
      Last
    {% endif %}
    {{loop.index}} of {{loop.length}} {# index / length #}
    {% if loop.previtem.isSome %} {# previtem / nextitem #}
      Previous {{loop.previtem.get.name}}
    {% endif %}
    {% if loop.nextitem.isSome %}
      Next {{loop.nextitem.get.name}}
    {% endif %}
    {{user.id}} {{loop.cycle(["odd", "even"])}} {# cycle #}
  {% endfor %}

  {% let grant = if access: "allow" else: "deny" %} {# NIm if expression #}
  <span class="{{grant.toUpperAscii}}"/> {# Call nim function #}
{% endblock %}
